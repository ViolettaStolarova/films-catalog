var v=Object.defineProperty;var g=(n,e,t)=>e in n?v(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var r=(n,e,t)=>g(n,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class p{constructor(e,t){r(this,"model");r(this,"view");r(this,"isLoading",!1);this.model=e,this.view=t,this.init()}async init(){try{await this.model.fetchInitialData(),this.view.initGenreDropdown(this.model.getGenres()),await this.loadMovies(),this.setupEventListeners()}catch{this.view.showError("Не удалось загрузить данные. Пожалуйста, попробуйте позже.")}}async loadMovies(e=1){if(!this.isLoading){this.isLoading=!0,e===1?this.view.showLoader():this.view.setLoadMoreButtonState(!0);try{const t=await this.model.fetchMovies(e);e===1?this.view.displayMovies(t):this.view.appendMovies(t),this.view.toggleLoadMoreButton(t.length>0)}catch{this.view.showError("Ошибка загрузки. Проверьте интернет соединение и попробуйте еще раз")}finally{this.isLoading=!1,e===1?this.view.hideLoader():this.view.setLoadMoreButtonState(!1)}}}async handleGenreChange(e){this.model.setCurrentGenre(e),await this.loadMovies(1)}async handleLoadMore(){await this.loadMovies(this.model.getCurrentPage()+1)}setupEventListeners(){this.view.bindGenreSelectChange(e=>this.handleGenreChange(e)),this.view.bindLoadMoreClick(()=>this.handleLoadMore())}async refresh(){await this.loadMovies(1)}}let m=class{constructor(){r(this,"baseUrl","https://api.kinopoisk.dev");r(this,"apiKey","RK12NJ9-E10MCXH-QVZEFRJ-K5PWG6J");r(this,"moviesPerPage",15)}async getGenres(){return await(await fetch(`${this.baseUrl}/v1/movie/possible-values-by-field?field=genres.name`,{headers:{"X-API-KEY":this.apiKey}})).json()}async getMovies(e){return(await(await fetch(`${this.baseUrl}/v1.3/movie?page=${e}&limit=${this.moviesPerPage}`,{headers:{"X-API-KEY":this.apiKey}})).json()).docs}async getMoviesByGenre(e,t=1){return(await(await fetch(`${this.baseUrl}/v1.3/movie?page=${t}&limit=${this.moviesPerPage}&genres.name=${e}`,{headers:{"X-API-KEY":this.apiKey}})).json()).docs}};const l=new m;class M{constructor(){r(this,"movies",[]);r(this,"genres",[]);r(this,"currentGenre","all");r(this,"currentPage",0)}async fetchInitialData(){this.genres=await l.getGenres()}async fetchMovies(e=1){const t=this.currentGenre==="all"?await l.getMovies(e):await l.getMoviesByGenre(this.currentGenre,e);return e===1?this.movies=t:this.movies=[...this.movies,...t],this.currentPage=e,t}getGenres(){return this.genres}setCurrentGenre(e){this.currentGenre=e}getCurrentGenre(){return this.currentGenre}getCurrentPage(){return this.currentPage}getCurrentMovies(){return this.movies}}function y(){return document.querySelector(".movies-container")}function f(){return document.querySelector(".genre-filter")}function w(){return document.querySelector(".loader")}function C(){return document.querySelector(".error-message")}function L(){return document.querySelector(".loadMore-button")}class G{constructor(){r(this,"moviesContainer");r(this,"genreSelect");r(this,"loader");r(this,"errorMessage");r(this,"loadMoreButton");this.moviesContainer=y(),this.genreSelect=f(),this.loader=w(),this.errorMessage=C(),this.loadMoreButton=L()}initGenreDropdown(e){this.genreSelect.innerHTML='<option value="all">Все жанры</option>',e.forEach(t=>{const o=document.createElement("option");o.value=t.name,o.textContent=t.name.charAt(0).toUpperCase()+t.name.slice(1),this.genreSelect.appendChild(o)})}displayMovies(e){this.moviesContainer.innerHTML="",this.appendMovies(e)}appendMovies(e){if(e.length===0&&this.moviesContainer.children.length===0){this.moviesContainer.innerHTML='<p class="no-results">Фильмы не найдены</p>';return}e.forEach(t=>{const o=this.createMovieCard(t);this.moviesContainer.appendChild(o)})}createMovieCard(e){var i,a,c,d,h;const t=document.createElement("div");t.className="movie-card";const o=((i=e.poster)==null?void 0:i.url)||((a=e.poster)==null?void 0:a.previewUrl)||"https://via.placeholder.com/300x450?text=No+Poster",s=((c=e.genres)==null?void 0:c.map(u=>u.name).join(", "))||"Жанр не указан";return t.innerHTML=`
            <img class="movie-poster" src="${o}" alt="${e.name}" loading="lazy">
            <div class="movie-info">
                <h3 class="movie-title">${e.name}</h3>
                <div class="movie-year">${e.year}</div>
                <div class="movie-rating">Рейтинг: ${((h=(d=e.rating)==null?void 0:d.kp)==null?void 0:h.toFixed(1))||"Н/Д"}</div>
                <div class="movie-genres">${s}</div>
            </div>
        `,t}toggleLoadMoreButton(e){this.loadMoreButton.style.display=e?"block":"none"}setLoadMoreButtonState(e){this.loadMoreButton.disabled=e,this.loadMoreButton.textContent=e?"Загрузка...":"Показать еще"}showLoader(){this.loader.style.display="block",this.errorMessage.style.display="none"}hideLoader(){this.loader.style.display="none"}showError(e){this.errorMessage.textContent=e,this.errorMessage.style.display="block",this.loader.style.display="none"}bindGenreSelectChange(e){this.genreSelect.addEventListener("change",()=>e(this.genreSelect.value))}bindLoadMoreClick(e){this.loadMoreButton.addEventListener("click",e)}}class P{constructor(){new p(new M,new G)}}document.addEventListener("DOMContentLoaded",()=>{new P});
